# https://www.humankode.com/ssl/how-to-set-up-free-ssl-certificates-from-lets-encrypt-using-docker-and-nginx
version: "3"
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    restart: always
    volumes:
      - ./frontend:/app
    expose:
      - "3000"
    environment:
      VIRTUAL_HOST: ${FRONTEND_HOST}
      LETSENCRYPT_HOST: ${FRONTEND_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    networks:
      - docker-network

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: ../docker/backend/Dockerfile
    depends_on:
      - mongo
    restart: always
    volumes:
      - ./backend:/app
    expose:
      - "3001"
    environment:
      VIRTUAL_HOST: ${BACKEND_HOST}
      LETSENCRYPT_HOST: ${BACKEND_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    networks:
      - docker-network
      - mongo-network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    command: mongod --smallfiles --logpath=/dev/null # --quiet
    volumes:
      - mongodb:/data/db
    networks:
      - mongo-network

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker/nginx/vhost.d:/etc/nginx/vhost.d
      - ./docker/nginx/certs:/etc/nginx/certs:rw
      - ./docker/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./docker/nginx/html:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    networks:
      - docker-network

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/nginx/vhost.d:/etc/nginx/vhost.d
      - ./docker/nginx/certs:/etc/nginx/certs:rw
      - ./docker/nginx/html:/usr/share/nginx/html

  mail:
    image: tvial/docker-mailserver:latest
    restart: always
    hostname: ${MAIL_HOSTNAME}
    domainname: ${DOMAINNAME}
    container_name: mail
    environment:
      ENABLE_SPAMASSASSIN: 1
      ENABLE_CLAMAV: 1
      ENABLE_FAIL2BAN: 1
      ENABLE_POSTGREY: 1
      ONE_DIR: 1
      DMS_DEBUG: 0
      ENABLE_MANAGESIEVE: 1
      SSL_TYPE: manual
      SSL_CERT_PATH: /tmp/ssl/fullchain.pem
      SSL_KEY_PATH: /tmp/ssl/key.pem
    cap_add:
      - NET_ADMIN
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
      - "4190:4190"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - ./docker/nginx/certs/${MAIL_FQDN}:/tmp/ssl/:ro
      - ./docker/mailserver/config:/tmp/docker-mailserver
      - /etc/localtime:/etc/localtime:ro
    networks:
      - mail-network

  webmail:
    container_name: webmail
    image: hardware/rainloop
    volumes:
      - webmaildata:/rainloop/data
    environment:
      VIRTUAL_HOST: ${MAIL_FQDN}
      LETSENCRYPT_HOST: ${MAIL_FQDN}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    links:
      - mail
    networks:
      - docker-network
      - mail-network

volumes:
  mongodb:
    driver: local
  maildata:
    driver: local
  mailstate:
    driver: local
  webmaildata:
    driver: local

networks:
  docker-network:
    driver: bridge
  mail-network:
    driver: bridge
  mongo-network:
    driver: bridge
