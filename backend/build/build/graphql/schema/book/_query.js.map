{"version":3,"sources":["../../../../graphql/schema/book/_query.js"],"names":["Object","defineProperty","exports","value","queryResolvers","queryTypes","_apolloServerExpress","require","_model","_interopRequireDefault","obj","__esModule","default","Query","gql","books","_","filter","find","map","book","toGraph","id","findById"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,UAAR,GAAqB,KAAK,CAAnD;;AAEA,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,uBAAD,CAAlC;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACF,OAAO,CAAC,UAAD,CAAR,CAAnC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMG,KAAK,GAAGP,oBAAoB,CAACQ,GAAI;;;;;CAAvC;;AAOA,MAAMT,UAAU,GAAG,MAAM,CAACQ,KAAD,CAAzB;;AAEAX,OAAO,CAACG,UAAR,GAAqBA,UAArB;AACA,MAAMD,cAAc,GAAG;AACrBS,EAAAA,KAAK,EAAE;AACLE,IAAAA,KAAK,EAAE,OAAOC,CAAP,EAAU;AACfC,MAAAA,MAAM,GAAG;AADM,KAAV,KAED;AACJ,YAAMF,KAAK,GAAG,MAAMP,MAAM,CAACI,OAAP,CAAeM,IAAf,CAAoB,EAApB,EAAwB,IAAxB,EAA8BD,MAA9B,CAApB;AACA,aAAOF,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,OAAL,EAAlB,CAAP;AACD,KANI;AAOLD,IAAAA,IAAI,EAAE,OAAOJ,CAAP,EAAU;AACdM,MAAAA;AADc,KAAV,KAEA;AACJ,YAAMF,IAAI,GAAG,MAAMZ,MAAM,CAACI,OAAP,CAAeW,QAAf,CAAwBD,EAAxB,CAAnB;AACA,aAAOF,IAAI,CAACC,OAAL,EAAP;AACD;AAZI;AADc,CAAvB;AAgBAnB,OAAO,CAACE,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryResolvers = exports.queryTypes = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _model = _interopRequireDefault(require(\"./_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Query = _apolloServerExpress.gql`\n  extend type Query {\n    books(filter: booksFilterInput): [Book]\n    book(id: String!): Book\n  }\n`;\n\nconst queryTypes = () => [Query];\n\nexports.queryTypes = queryTypes;\nconst queryResolvers = {\n  Query: {\n    books: async (_, {\n      filter = {}\n    }) => {\n      const books = await _model.default.find({}, null, filter);\n      return books.map(book => book.toGraph());\n    },\n    book: async (_, {\n      id\n    }) => {\n      const book = await _model.default.findById(id);\n      return book.toGraph();\n    }\n  }\n};\nexports.queryResolvers = queryResolvers;"],"file":"_query.js"}